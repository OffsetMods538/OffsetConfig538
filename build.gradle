plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
}

group = project.maven_group
if ("true".equalsIgnoreCase(System.getenv("IS_DEBUG"))) {
    version = "${version}-${System.currentTimeMillis()}"
}
final String customVersion = System.getenv("CUSTOM_VERSION")
if (customVersion != null && !customVersion.isEmpty()) {
    version = "${version}-${customVersion}"
}
println "Version: ${version}"

repositories {
    mavenCentral()
}

configurations {
    include


    includeApi

    include.extendsFrom includeApi
    api.extendsFrom includeApi
}

dependencies {
    includeApi "blue.endless:jankson:${project.jankson_version}"

    testCompileOnly compileOnly("org.jetbrains:annotations:${project.jetbrains_annotations_version}")


    testImplementation platform("org.junit:junit-bom:${project.junit_version}")
    testImplementation "org.junit.jupiter:junit-jupiter"
}

test {
    useJUnitPlatform()
}

jar {
    from("LICENSE") {
        rename {
            "${it}_${project.archivesBaseName}"
        }
    }

    // Include dependencies
    //duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.include.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

tasks.named("javadoc", Javadoc) {
    options.addFileOption('-add-stylesheet', rootProject.file("javadoc-stylesheet.css"))
}

java {
    withJavadocJar()
    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    options.release = 17
}

publishing {
    repositories {
        maven {
            name = "OffsetMods538"
            url = "https://maven.offsetmonkey538.top/releases"
            credentials {
                username = providers.gradleProperty("OffsetMods538Username").getOrElse(System.getenv("MAVEN_USERNAME"))
                password = providers.gradleProperty("OffsetMods538Password").getOrElse(System.getenv("MAVEN_PASSWORD"))
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
    publications {
        maven(MavenPublication) {
            artifactId = project.archivesBaseName

            from(components["java"])
        }
    }
}
